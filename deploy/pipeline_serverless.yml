---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Pipeline: Serverless'
Parameters:
  RepositoryName:
    Type: String
    Default: 'SimpleService'
  BranchName:
    Type: String
    Default: 'master'
  Owner:
    Description: The owner of the repository
    Type: String
  OAuthToken:
    Type: String
Resources:
  ArtifactsBucket:
    DependsOn: CloudFormationRole # make sure that CloudFormationRole is deleted last
    DeletionPolicy: Retain
    Type: 'AWS::S3::Bucket'
  PipelineRole:
    DependsOn: CloudFormationRole # make sure that CloudFormationRole is deleted last
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'codepipeline.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AdministratorAccess'
  CloudFormationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'cloudformation.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AdministratorAccess'
  CodeBuildRole:
    DependsOn: CloudFormationRole # make sure that CloudFormationRole is deleted last
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'codebuild.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Policies:
      - PolicyName: ServiceRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: CloudWatchLogsPolicy
            Effect: Allow
            Action: 
            - 'logs:CreateLogGroup'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Resource: '*'
          - Sid: CodeCommitPolicy
            Effect: Allow
            Action: 'codecommit:GitPull'
            Resource: '*'
          - Sid: S3GetObjectPolicy
            Effect: Allow
            Action: 
            - 's3:GetObject'
            - 's3:GetObjectVersion'
            Resource: '*'
          - Sid: S3PutObjectPolicy
            Effect: 'Allow'
            Action: 's3:PutObject'
            Resource: '*'
  AppProject:
    DependsOn: CloudFormationRole # make sure that CloudFormationRole is deleted last
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: 'BUILD_GENERAL1_SMALL'
        #Image: 'aws/codebuild/java:openjdk-9'
        Image: 'mattfite/openjdk-9-gradle-4.6'
        Type: 'LINUX_CONTAINER'
      Name: !Sub '${AWS::StackName}-app'
      ServiceRole: !GetAtt 'CodeBuildRole.Arn'
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.1
          phases:
            build:
              commands:
              - 'echo "until gradle is updated to 4.6, cp 4.3 version"'
              #- 'cp app/build.gradle-4.3 app/build.gradle'
              - 'cd app/ && gradle wrapper --gradle-version 4.6'
              - 'cd app/ && ./gradlew test'
              - 'find .'
            post_build:
              commands:
              - 'echo "create artifacts. SAM will compress"'
              - 'cd app/ && ./gradlew copy2'
          artifacts:
            files:
            #- 'app/build/libs/app-1.0-SNAPSHOT-all.jar'
            #- 'app/build/distributions/app-1.0-SNAPSHOT.zip'
            - '**/*'
            base-directory: 'app/build/sam-dist'
            #discard-paths: yes
      TimeoutInMinutes: 10
  AcceptanceProject:
    DependsOn: CloudFormationRole # make sure that CloudFormationRole is deleted last
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: 'BUILD_GENERAL1_SMALL'
        #Image: 'aws/codebuild/java:openjdk-9'
        Image: 'mattfite/openjdk-9-gradle-4.6'
        Type: 'LINUX_CONTAINER'
      Name: !Sub '${AWS::StackName}-acceptance'
      ServiceRole: !GetAtt 'CodeBuildRole.Arn'
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.1
          phases:
            build:
              commands:
              - 'echo "until gradle is updated to 4.6, cp 4.3 version"'
              #- 'cp acceptance/build.gradle-4.3 acceptance/build.gradle'
              - 'cd acceptance/ && gradle wrapper --gradle-version 4.6'
              #- 'cd acceptance/ && ./gradlew test'
              - 'find .'
            post_build:
              commands:
              - 'echo "integration test setup complete"'
          artifacts:
            files:
            - 'acceptance/**/*'
      TimeoutInMinutes: 10
  RunAcceptanceCodeBuildRole:
    DependsOn: CloudFormationRole # make sure that CloudFormationRole is deleted last
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'codebuild.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Policies:
      - PolicyName: ServiceRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: CloudWatchLogsPolicy
            Effect: Allow
            Action: 
            - 'logs:CreateLogGroup'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Resource: '*'
          - Sid: CodeCommitPolicy
            Effect: Allow
            Action: 'codecommit:GitPull'
            Resource: '*'
          - Sid: S3GetObjectPolicy
            Effect: Allow
            Action: 
            - 's3:GetObject'
            - 's3:GetObjectVersion'
            Resource: '*'
          - Sid: S3PutObjectPolicy
            Effect: 'Allow'
            Action: 's3:PutObject'
            Resource: '*'
      - PolicyName: CloudFormation
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: CloudFormation
            Effect: Allow
            Action: 
            - 'cloudformation:DescribeStacks'
            Resource: !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}-acceptance/*'
  RunAcceptanceProject:
    DependsOn: CloudFormationRole # make sure that CloudFormationRole is deleted last
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: 'BUILD_GENERAL1_SMALL'
        #Image: 'aws/codebuild/java:openjdk-9'
        Image: 'mattfite/openjdk-9-gradle-4.6'
        Type: 'LINUX_CONTAINER'
      Name: !Sub '${AWS::StackName}-run-acceptance'
      ServiceRole: !GetAtt 'RunAcceptanceCodeBuildRole.Arn'
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.1
          phases:
            build: # execute acceptance tests against the acceptance stack
              commands:
              - 'cd acceptance/ && ENDPOINT=`aws cloudformation describe-stacks --stack-name ${AWS::StackName}-acceptance --query "Stacks[0].Outputs[?OutputKey==''URL''].OutputValue" --output text` ./gradlew clean test'
              - 'find .'
      TimeoutInMinutes: 10
  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      Name: !Ref 'AWS::StackName'
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt 'PipelineRole.Arn'
      Stages:
      - Name: Source
        Actions:
        - Name: FetchSource
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: 1
          Configuration:
            Branch: !Ref BranchName
            Owner: !Ref Owner
            OAuthToken: !Ref OAuthToken
            Repo: !Ref RepositoryName
            PollForSourceChanges: true
          OutputArtifacts:
          - Name: Source
          RunOrder: 1
      - Name: Pipeline
        Actions:
        - Name: DeployPipeline
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_IAM
            RoleArn: !GetAtt 'CloudFormationRole.Arn'
            StackName: !Ref 'AWS::StackName'
            TemplatePath: 'Source::deploy/pipeline_serverless.yml'
            ParameterOverrides: !Sub '{"RepositoryName": "${RepositoryName}", "BranchName": "${BranchName}", "Owner": "${Owner}", "OAuthToken": "${OAuthToken}"}'
          InputArtifacts:
          - Name: Source
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: BuildAndTestApp
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: !Ref AppProject
          InputArtifacts:
          - Name: Source
          OutputArtifacts:
          - Name: App
          RunOrder: 1
        - Name: BuildAndTestAcceptance
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: !Ref AcceptanceProject
          InputArtifacts:
          - Name: Source
          OutputArtifacts:
          - Name: Acceptance
          RunOrder: 1
      - Name: Acceptance
        Actions:
        - Name: CreateChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CHANGE_SET_REPLACE
            Capabilities: CAPABILITY_IAM
            RoleArn: !GetAtt 'CloudFormationRole.Arn'
            ChangeSetName: !Sub '${AWS::StackName}-acceptance'
            StackName: !Sub '${AWS::StackName}-acceptance'
            TemplatePath: 'Source::infrastructure/serverless.yml'
            TemplateConfiguration: 'Source::infrastructure/serverless.json'
          InputArtifacts:
          - Name: Source
          - Name: App
          RunOrder: 1
        - Name: ApplyChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CHANGE_SET_EXECUTE
            Capabilities: CAPABILITY_IAM
            ChangeSetName: !Sub '${AWS::StackName}-acceptance'
            StackName: !Sub '${AWS::StackName}-acceptance'
          RunOrder: 2
        - Name: Test
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: !Ref RunAcceptanceProject
          InputArtifacts:
          - Name: Acceptance
          RunOrder: 3
      - Name: Production
        Actions:
        - Name: CreateChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CHANGE_SET_REPLACE
            Capabilities: CAPABILITY_IAM
            RoleArn: !GetAtt 'CloudFormationRole.Arn'
            ChangeSetName: !Sub '${AWS::StackName}-production'
            StackName: !Sub '${AWS::StackName}-production'
            TemplatePath: 'Source::infrastructure/serverless.yml'
            TemplateConfiguration: 'Source::infrastructure/serverless.json'
          InputArtifacts:
          - Name: Source
          - Name: App
          RunOrder: 1
        - Name: ApplyChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CHANGE_SET_EXECUTE
            Capabilities: CAPABILITY_IAM
            ChangeSetName: !Sub '${AWS::StackName}-production'
            StackName: !Sub '${AWS::StackName}-production'
          RunOrder: 2
